name: Development

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  workflow_call:

env:
  MYSQL_DATABASE: pinkyring
  MYSQL_USER: root
  MYSQL_ROOT_PASSWORD: example

jobs:
  unit-test:
    name: Unit test application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v3

      - name: '🔧 setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: '📦 install dependencies'
        uses: bahmutov/npm-install@v1

      - name: '🔍 run unit tests'
        run: npm run test:unit --if-present

  integration-test:
    name: Integration test application
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{env.MYSQL_ROOT_PASSWORD}}
        ports:
          - 3306:3306
    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v3

      - name: '🔧 setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: '🔧 create env file'
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: 'test'
          envkey_IDEMPOTENT_REQUESTS_CLEAN_OLDERTHAN_HOURS: '24'

      - name: '📦 install dependencies'
        uses: bahmutov/npm-install@v1

      - name: '🔧 setup prisma - generate'
        working-directory: ./packages/infrastructure/repositories
        run: npx prisma generate

      - name: '🔧 setup prisma - migrate'
        working-directory: ./packages/infrastructure/repositories
        run: npx prisma migrate deploy
        env:
          MYSQL_DATABASE_URL: mysql://${{env.MYSQL_USER}}:${{env.MYSQL_ROOT_PASSWORD}}@127.0.0.1:3306/${{env.MYSQL_DATABASE}}

      - name: '🔍 run integration tests'
        run: npm run test:it --if-present
        env:
          MYSQL_DATABASE_URL: mysql://${{env.MYSQL_USER}}:${{env.MYSQL_ROOT_PASSWORD}}@127.0.0.1:3306/${{env.MYSQL_DATABASE}}

  style-and-lint:
    name: Code standards
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v3

      - name: '🔧 setup node'
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: '🔧 install npm@latest'
        run: npm i -g npm@latest

      - name: '📦 install dependencies'
        uses: bahmutov/npm-install@v1

      - name: '🔍 prettier check code'
        run: npm run prettier:check --if-present

      - name: '🔍 lint code'
        if: success() || failure()
        run: npm run lint --if-present
