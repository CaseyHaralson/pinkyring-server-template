Resources:
  BlogPostAddedTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'BlogPostAdded.fifo'
      FifoTopic: true
      ContentBasedDeduplication: true
      Subscription:
        - Protocol: sqs
          Endpoint: !GetAtt BlogPostAddedQueue.Arn
        - Protocol: sqs
          Endpoint: !GetAtt ManualPullQueue.Arn

  BlogPostAddedQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'BlogPostAddedQueue.fifo'
      FifoQueue: true
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt BlogPostAddedDLQ.Arn
        maxReceiveCount: 3
  
  BlogPostAddedDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'BlogPostAddedDLQ.fifo'
      FifoQueue: true
      ContentBasedDeduplication: true

  BlogPostAddedSNStoSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Allow SNS publish to SQS'
            Effect: Allow
            Principal:
              Service: 'sns.amazonaws.com'
            Resource: !GetAtt BlogPostAddedQueue.Arn
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref BlogPostAddedTopic
      Queues:
        - Ref: BlogPostAddedQueue
  
  ManualPullQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'ManualPullQueue.fifo'
      FifoQueue: true
      ContentBasedDeduplication: true
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ManualPullDLQ.Arn
        maxReceiveCount: 3
  
  ManualPullDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'ManualPullDLQ.fifo'
      FifoQueue: true
      ContentBasedDeduplication: true

  ManualPullQueueSNStoSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Allow SNS publish to SQS - Manual Pull Queue'
            Effect: Allow
            Principal:
              Service: 'sns.amazonaws.com'
            Resource: !GetAtt ManualPullQueue.Arn
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref BlogPostAddedTopic
      Queues:
        - Ref: ManualPullQueue

  # BlogPostAddedVpcToSNSPolicy:
  #   Type: AWS::SNS::TopicPolicy
  #   Properties:
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Sid: 'Allow VPC publish to SNS'
  #           Effect: Allow
  #           Principal: '*'
  #           Resource: !Ref BlogPostAddedTopic
  #           Action: SNS:Publish
  #           Condition:
  #             IpAddress:
  #               aws:SourceIp: 10.0.0.0/16
  #     Topics:
  #       - Ref: BlogPostAddedTopic
  
  SNSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: '10.0.0.0/16'

  SNSEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.${self:provider.region}.sns
      SecurityGroupIds:
        - !Ref SNSSecurityGroup
      SubnetIds:
        - !Ref SubnetAPrivate
        - !Ref SubnetBPrivate
      VpcEndpointType: Interface
      VpcId: !Ref VPC

  SQSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: '10.0.0.0/16'

  SQSEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      ServiceName: com.amazonaws.${self:provider.region}.sqs
      SecurityGroupIds:
        - !Ref SQSSecurityGroup
      SubnetIds:
        - !Ref SubnetAPrivate
        - !Ref SubnetBPrivate
      VpcEndpointType: Interface
      VpcId: !Ref VPC