version: '3.8'

services:
  mysql:
    container_name: mysql
    image: mysql:8.0.31
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}

  mysql-adminer:
    container_name: mysql-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
  
  rabbitmq:
    image: rabbitmq:3.11.2-management-alpine
    hostname: 'persistmydata' #https://stackoverflow.com/questions/41330514/docker-rabbitmq-persistency
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
  
  app-api-graphql:
    container_name: app-api-graphql
    build:
      context: ./docker
      dockerfile: Dockerfile.app
    ports:
      - 4000:4000
    working_dir: /code/packages/apps/api-graphql
    volumes:
      - ./:/code
  
  app-api-rest:
    container_name: app-api-rest
    build:
      context: ./docker
      dockerfile: Dockerfile.app
    ports:
      - 3000:3000
    working_dir: /code/packages/apps/api-rest
    volumes:
      - ./:/code
  
  # don't run the chron jobs app because there isn't anything to see
  # app-cron-jobs:
  #   container_name: app-cron-jobs
  #   build:
  #     context: ./docker
  #     dockerfile: Dockerfile.app
  #   working_dir: /code/packages/apps/cron-jobs
  #   volumes:
  #     - ./:/code
  
  prisma:
    container_name: prisma
    build:
      context: ./docker
      dockerfile: Dockerfile.prisma
    working_dir: /code
    volumes:
      - ./:/code
    environment:
      MYSQL_DATABASE_URL: ${MYSQL_DATABASE_URL}

volumes:
  mysql:
  rabbitmq:
